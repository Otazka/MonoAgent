[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "monoagent"
dynamic = ["version"]
description = "AI-powered monorepo splitter with intelligent project detection and multi-provider support"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Elena Surovtseva", email = "your.email@example.com"}
]
maintainers = [
    {name = "Elena Surovtseva", email = "your.email@example.com"}
]
keywords = ["monorepo", "git", "github", "gitlab", "bitbucket", "azure", "repository", "split", "ai", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Version Control :: Git",
]
requires-python = ">=3.9"
dependencies = [
    "PyGithub>=2.1.1",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "tqdm>=4.64.0",
    "networkx>=3.0",
    "matplotlib>=3.5.0",
    "graphviz>=0.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
    "flake8>=4.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/Otazka/MonoAgent"
Documentation = "https://github.com/Otazka/MonoAgent#readme"
Repository = "https://github.com/Otazka/MonoAgent"
"Bug Tracker" = "https://github.com/Otazka/MonoAgent/issues"

[project.scripts]
monoagent = "split_repo_agent:main"

[tool.setuptools_scm]
write_to = "split_repo_agent/_version.py"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=split_repo_agent",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["split_repo_agent"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E501", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]
